var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ModelT.html",[0,0.646,1,0.863]],["body/classes/ModelT.html",[0,0.578,1,0.771,2,0.65,3,0.858,4,0.65,5,0.65,6,0.949,7,1.024,8,0.949,9,0.494,10,1.861,11,1.339,12,1.174,13,1.174,14,1.339,15,2.429,16,1.174,17,0.37,18,0.771,19,0.65,20,0.65,21,0.858,22,0.11,23,1.339,24,0.65,25,0.858,26,0.858,27,0.65,28,0.858,29,0.65,30,0.65,31,1.247,32,1.247,33,1.247,34,0.858,35,0.37,36,2.019,37,1.647,38,0.858,39,2.429,40,2.019,41,1.647,42,0.858,43,1.647,44,1.647,45,1.647,46,2.429,47,1.339,48,1.861,49,0.858,50,0.858,51,1.647,52,0.858,53,2.429,54,0.858,55,1.247,56,1.339,57,0.858,58,0.858,59,0.858,60,0.858,61,0.858,62,1.647,63,0.858,64,1.339,65,2.312,66,2.234,67,2.234,68,0.858,69,0.858,70,0.858,71,0.858,72,0.65,73,0.858,74,1.339,75,0.858,76,0.858,77,0.858,78,0.05,79,0.05]],["title/classes/SortFilterFind.html",[0,0.646,35,0.646]],["body/classes/SortFilterFind.html",[0,0.441,1,0.354,2,0.465,3,0.614,4,0.465,5,0.465,6,1.291,7,1.162,8,1.291,9,0.354,10,1.313,11,2.183,14,0.614,15,2.292,17,0.792,18,0.979,19,0.774,20,0.465,21,0.614,22,0.109,23,1.531,24,0.774,25,1.022,26,1.022,27,0.774,28,1.022,29,0.774,30,0.774,31,1.474,32,1.544,33,1.544,34,0.614,35,0.441,36,2.412,37,1.836,38,1.313,39,2.337,40,1.947,41,1.947,42,0.614,43,1.947,44,1.531,45,2.292,46,2.337,47,1.7,48,1.531,49,0.614,50,0.614,51,1.313,52,1.313,53,2.183,54,0.614,55,0.994,56,1.022,57,1.022,58,1.022,59,1.022,60,1.022,61,1.022,62,1.313,63,0.614,64,1.022,65,2.039,66,1.947,67,1.947,68,0.614,69,0.614,70,0.614,71,1.022,72,0.774,73,0.614,74,1.022,75,1.022,76,1.022,77,0.614,78,0.038,79,0.038,80,0.614,81,0.465,82,0.774,83,1.399,84,1.399,85,0.84,86,1.399,87,0.84,88,0.614,89,0.84,90,2.327,91,0.84,92,0.84,93,0.84,94,0.84,95,0.84,96,0.84,97,0.84,98,0.84,99,0.84]],["title/coverage.html",[100,2.009]],["body/coverage.html",[0,0.991,1,1.061,5,1.395,6,1.442,7,1.186,8,1.442,9,1.442,17,0.991,18,1.061,22,0.1,35,0.795,55,1.74,78,0.085,79,0.085,100,1.843,101,2.522,102,2.522,103,2.522,104,2.522,105,2.522,106,2.522,107,2.522,108,2.522,109,1.843,110,2.522,111,2.522]],["title/dependencies.html",[112,0.961,113,1.792]],["body/dependencies.html",[22,0.108,78,0.086,79,0.086,113,1.869,114,2.557,115,3.868,116,2.557,117,2.557,118,2.557,119,2.557,120,3.171,121,3.171,122,2.557,123,2.557,124,2.557,125,2.557,126,2.557,127,2.557,128,2.557,129,2.557]],["title/index.html",[81,0.961,130,1.736,131,1.736]],["body/index.html",[4,1.082,22,0.072,35,0.616,78,0.072,79,0.072,88,1.429,109,1.429,112,1.082,132,2.664,133,1.956,134,3.029,135,3.029,136,1.429,137,1.956,138,1.956,139,2.664,140,3.402,141,3.592,142,1.956,143,1.956,144,1.956,145,1.956,146,1.956,147,1.956,148,1.956,149,1.956,150,1.956,151,1.956,152,1.956,153,3.029,154,3.029,155,3.029,156,1.956,157,3.252,158,1.956,159,1.956,160,1.956,161,1.956,162,2.664,163,2.664,164,3.252,165,1.956,166,2.664,167,2.664,168,1.956,169,3.51,170,1.956,171,1.956,172,1.956,173,2.664,174,1.956,175,1.956,176,1.956,177,1.956,178,1.956,179,1.956,180,1.956,181,3.029,182,1.956,183,1.956,184,1.956,185,1.956,186,1.082,187,1.956,188,1.956]],["title/modules.html",[189,2.009]],["body/modules.html",[22,0.096,78,0.096,79,0.096,189,2.252]],["title/overview.html",[186,1.521]],["body/overview.html",[2,1.686,22,0.095,78,0.095,79,0.095,186,1.686,190,3.048]],["title/properties.html",[82,1.357,112,0.961]],["body/properties.html",[7,0.795,17,0.795,22,0.106,24,1.395,27,1.395,29,1.395,30,1.395,31,1.395,32,1.395,33,1.395,72,1.395,78,0.085,79,0.085,80,1.843,82,1.395,136,1.843,191,2.522,192,2.522,193,2.522,194,2.522,195,2.522,196,2.522,197,2.522,198,2.522,199,2.522,200,2.522,201,2.522,202,2.522,203,2.522,204,2.522,205,2.522,206,2.522,207,2.522,208,2.522,209,2.522]],["title/miscellaneous/typealiases.html",[210,1.268,211,2.452]],["body/miscellaneous/typealiases.html",[6,1.189,7,1.135,8,1.189,9,1.418,17,0.89,18,1.418,19,1.563,20,1.563,22,0.097,78,0.091,79,0.091,81,1.563,210,2.064,212,2.825,213,2.825]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":55,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{}}}],["0.14.3",{"_index":129,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":104,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":191,"title":{},"body":{"properties.html":{}}}],["17.3.0",{"_index":115,"title":{},"body":{"dependencies.html":{}}}],["17.3.5",{"_index":137,"title":{},"body":{"index.html":{}}}],["2",{"_index":190,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":127,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":106,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":105,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":125,"title":{},"body":{"dependencies.html":{}}}],["a[this.fieldname",{"_index":66,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["accessors",{"_index":84,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["add",{"_index":176,"title":{},"body":{"index.html":{}}}],["alias",{"_index":107,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":212,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":134,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":116,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":117,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":119,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":120,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"dependencies.html":{}}}],["application",{"_index":146,"title":{},"body":{"index.html":{}}}],["array",{"_index":31,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["artifacts",{"_index":158,"title":{},"body":{"index.html":{}}}],["asc",{"_index":19,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":207,"title":{},"body":{"properties.html":{}}}],["automatically",{"_index":147,"title":{},"body":{"index.html":{}}}],["b[this.fieldname",{"_index":67,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["browser",{"_index":121,"title":{},"body":{"dependencies.html":{}}}],["bugs",{"_index":201,"title":{},"body":{"properties.html":{}}}],["build",{"_index":157,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":179,"title":{},"body":{"index.html":{}}}],["change",{"_index":149,"title":{},"body":{"index.html":{}}}],["check",{"_index":184,"title":{},"body":{"index.html":{}}}],["choice",{"_index":172,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{}}}],["classe",{"_index":23,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"overview.html":{}}}],["cli",{"_index":135,"title":{},"body":{"index.html":{}}}],["code",{"_index":151,"title":{},"body":{"index.html":{}}}],["command",{"_index":173,"title":{},"body":{"index.html":{}}}],["component",{"_index":154,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["constructor(data",{"_index":85,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["coverage",{"_index":100,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["croissant",{"_index":59,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["data",{"_index":37,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["de",{"_index":195,"title":{},"body":{"properties.html":{}}}],["decroissant",{"_index":61,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["default",{"_index":90,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["defined",{"_index":11,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["dependencies",{"_index":113,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["des",{"_index":26,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["desc",{"_index":20,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"miscellaneous/typealiases.html":{}}}],["description",{"_index":80,"title":{},"body":{"classes/SortFilterFind.html":{},"properties.html":{}}}],["dev",{"_index":143,"title":{},"body":{"index.html":{}}}],["development",{"_index":138,"title":{},"body":{"index.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":156,"title":{},"body":{"index.html":{}}}],["directory",{"_index":161,"title":{},"body":{"index.html":{}}}],["dist",{"_index":160,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":101,"title":{},"body":{"coverage.html":{}}}],["dynamic",{"_index":122,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":170,"title":{},"body":{"index.html":{}}}],["effectuer",{"_index":25,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["element[this.fieldname",{"_index":74,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["end",{"_index":169,"title":{},"body":{"index.html":{}}}],["execute",{"_index":166,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["faciliter",{"_index":193,"title":{},"body":{"properties.html":{}}}],["fieldname",{"_index":43,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{}}}],["files",{"_index":150,"title":{},"body":{"index.html":{}}}],["filter",{"_index":7,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["filtre",{"_index":71,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["find",{"_index":33,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["find.ts",{"_index":9,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["find.ts:11",{"_index":91,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:12",{"_index":93,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:13",{"_index":94,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:14",{"_index":92,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:15",{"_index":86,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:2",{"_index":12,"title":{},"body":{"classes/ModelT.html":{}}}],["find.ts:29",{"_index":99,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:3",{"_index":16,"title":{},"body":{"classes/ModelT.html":{}}}],["find.ts:36",{"_index":97,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:75",{"_index":95,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find.ts:84",{"_index":96,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["find/src/lib/sort",{"_index":8,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["first",{"_index":175,"title":{},"body":{"index.html":{}}}],["further",{"_index":180,"title":{},"body":{"index.html":{}}}],["generate",{"_index":153,"title":{},"body":{"index.html":{}}}],["generated",{"_index":133,"title":{},"body":{"index.html":{}}}],["generique",{"_index":72,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["getting",{"_index":130,"title":{"index.html":{}},"body":{}}],["getvaluedata",{"_index":98,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["git+https://github.com/lemu94/sortfilterfind.git",{"_index":206,"title":{},"body":{"properties.html":{}}}],["go",{"_index":183,"title":{},"body":{"index.html":{}}}],["help",{"_index":181,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":199,"title":{},"body":{"properties.html":{}}}],["http://localhost:4200",{"_index":145,"title":{},"body":{"index.html":{}}}],["https://github.com/lemu94/sortfilterfind#readme",{"_index":200,"title":{},"body":{"properties.html":{}}}],["https://github.com/lemu94/sortfilterfind/issues",{"_index":202,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":102,"title":{},"body":{"coverage.html":{}}}],["if(this.typesort===\"asc",{"_index":63,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["if(this.typesort===\"desc",{"_index":69,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["implements",{"_index":177,"title":{},"body":{"index.html":{}}}],["index",{"_index":81,"title":{"index.html":{}},"body":{"classes/SortFilterFind.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":13,"title":{},"body":{"classes/ModelT.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["karma",{"_index":168,"title":{},"body":{"index.html":{}}}],["key",{"_index":14,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["keyof",{"_index":44,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["keywords",{"_index":197,"title":{},"body":{"properties.html":{}}}],["l'objet",{"_index":76,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["lemuel",{"_index":208,"title":{},"body":{"properties.html":{}}}],["les",{"_index":30,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["librairie",{"_index":192,"title":{},"body":{"properties.html":{}}}],["license",{"_index":203,"title":{},"body":{"properties.html":{}}}],["matching",{"_index":79,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":83,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["miscellaneous",{"_index":210,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modelt",{"_index":1,"title":{"classes/ModelT.html":{}},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{}}}],["modules",{"_index":189,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":182,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"classes/SortFilterFind.html":{},"index.html":{}}}],["navigate",{"_index":144,"title":{},"body":{"index.html":{}}}],["need",{"_index":174,"title":{},"body":{"index.html":{}}}],["new",{"_index":109,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":141,"title":{},"body":{"index.html":{}}}],["null",{"_index":40,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["number",{"_index":46,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["onedata",{"_index":38,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["operations",{"_index":27,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["optional",{"_index":89,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["ordre",{"_index":58,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["ou",{"_index":60,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["out",{"_index":185,"title":{},"body":{"index.html":{}}}],["overview",{"_index":186,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":112,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":188,"title":{},"body":{"index.html":{}}}],["par",{"_index":57,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"classes/SortFilterFind.html":{}}}],["platform",{"_index":171,"title":{},"body":{"index.html":{}}}],["pour",{"_index":24,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["private",{"_index":36,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["project",{"_index":132,"title":{},"body":{"index.html":{}}}],["projects/.../sort",{"_index":213,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/sort",{"_index":6,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"classes/SortFilterFind.html":{},"properties.html":{}}}],["recupere",{"_index":75,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["reference",{"_index":187,"title":{},"body":{"index.html":{}}}],["reload",{"_index":148,"title":{},"body":{"index.html":{}}}],["repository",{"_index":205,"title":{},"body":{"properties.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":53,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["returns",{"_index":62,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["run",{"_index":140,"title":{},"body":{"index.html":{}}}],["running",{"_index":162,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":124,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":152,"title":{},"body":{"index.html":{}}}],["serve",{"_index":142,"title":{},"body":{"index.html":{}}}],["server",{"_index":139,"title":{},"body":{"index.html":{}}}],["simples",{"_index":28,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["sort",{"_index":32,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["sortfilterfind",{"_index":35,"title":{"classes/SortFilterFind.html":{}},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"index.html":{}}}],["sorttype",{"_index":18,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sorttype=\"asc",{"_index":42,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"index.html":{}}}],["started",{"_index":131,"title":{"index.html":{}},"body":{}}],["statements",{"_index":103,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":159,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["string).localecompare(a[this.fieldname",{"_index":70,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["string).localecompare(b[this.fieldname",{"_index":68,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["sur",{"_index":29,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"properties.html":{}}}],["t",{"_index":39,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["table",{"_index":111,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":196,"title":{},"body":{"properties.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":165,"title":{},"body":{"index.html":{}}}],["testing",{"_index":178,"title":{},"body":{"index.html":{}}}],["tests",{"_index":164,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":48,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.data.filter((element",{"_index":73,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.data.find((element",{"_index":77,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.data.length",{"_index":54,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.data.sort((a,b",{"_index":64,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.fieldname",{"_index":50,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.onedata",{"_index":56,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.typesort",{"_index":49,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["this.value",{"_index":51,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["tout",{"_index":194,"title":{},"body":{"properties.html":{}}}],["ts",{"_index":198,"title":{},"body":{"properties.html":{}}}],["tslib",{"_index":126,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{},"coverage.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":211,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":65,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["typesort",{"_index":41,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["unit",{"_index":163,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":21,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["unlicensed",{"_index":204,"title":{},"body":{"properties.html":{}}}],["use",{"_index":155,"title":{},"body":{"index.html":{}}}],["value",{"_index":45,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["valuedata",{"_index":52,"title":{},"body":{"classes/ModelT.html":{},"classes/SortFilterFind.html":{}}}],["version",{"_index":136,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":167,"title":{},"body":{"index.html":{}}}],["yokoi",{"_index":209,"title":{},"body":{"properties.html":{}}}],["zone.js",{"_index":128,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ModelT.html":{"url":"classes/ModelT.html","title":"class - ModelT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sort-filter-find/src/lib/sort-filter-find.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:2\n                            \n                        \n\n            \n        \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    \n\n                    \n                \n                        \n                            \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:3\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        type sortType =\"ASC\"| \"DESC\";\nclass ModelT{\n    constructor(){}\n    [key: string]: unknown\n}\n/**\n * classe pour effectuer des operations simples sur les array : Sort / Find / Filter\n */\n\nexport class SortFilterFind {\n  private data : Array=[];\n  private oneData : T | null = null;\n  private typeSort : sortType=\"ASC\";\n  private fieldName : keyof T = \"\" as keyof T;\n  private value :  string | number | boolean =\"\";\n  \n  constructor(\n    data: Array,\n    typeSort: sortType,\n    fieldName: keyof T,\n    value: string | number | boolean =\"\"\n) {\n    this.data = data;\n    this.typeSort = typeSort;\n    this.fieldName = fieldName;\n    this.value = value;\n}\n\n  get valueData() : T | T[] | null{\n      return (this.data.length !==0)? this.data : this.oneData ; \n  }\n  /**\n   * sort : classe par ordre croissant ou decroissant\n   * @returns T[]\n   */\n  sort() : this{ \n      if(this.typeSort===\"ASC\")\n      {\n          this.data.sort((a,b)=> {\n\n              if (typeof a[this.fieldName] === 'string' && typeof b[this.fieldName] === 'string') {\n                  return (a[this.fieldName] as string).localeCompare(b[this.fieldName] as string);\n              }\n              \n              if (typeof a[this.fieldName] === 'number' && typeof b[this.fieldName] === 'number') {\n                  return  (a[this.fieldName] as number) - (b[this.fieldName] as number);\n              }\n              return 0;\n  \n          } )\n      }\n\n      if(this.typeSort===\"DESC\")\n          {\n              this.data.sort((a,b)=> {\n  \n                  if (typeof a[this.fieldName] === 'string' && typeof b[this.fieldName] === 'string') {\n                      return (b[this.fieldName] as string).localeCompare(a[this.fieldName] as string);\n                  }\n                  \n                  if (typeof a[this.fieldName] === 'number' && typeof b[this.fieldName] === 'number') {\n                      return  (b[this.fieldName] as number) - (a[this.fieldName] as number);\n                  }\n                  return 0;\n      \n              } )\n          }\n      return this;\n  }\n\n  /**\n   * filter : filtre generique\n   * @returns T[]\n   */\n  filter() : this\n  {\n      this.data = this.data.filter((element) => element[this.fieldName] === this.value);\n      return this;\n  }\n  /**\n   * find : recupere l'Objet T\n   * @returns T | null\n   */\n  find() : this{\n      this.oneData = this.data.find((element)=> element[this.fieldName] === this.value) ?? null;\n      this.data=[];\n      return this;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortFilterFind.html":{"url":"classes/SortFilterFind.html","title":"class - SortFilterFind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortFilterFind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sort-filter-find/src/lib/sort-filter-find.ts\n        \n\n\n            \n                Description\n            \n            \n                classe pour effectuer des operations simples sur les array : Sort / Find / Filter\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                fieldName\n                            \n                            \n                                    Private\n                                oneData\n                            \n                            \n                                    Private\n                                typeSort\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                find\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    valueData\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Array, typeSort: sortType, fieldName, value: string | number | boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeSort\n                                                  \n                                                        \n                                                                        sortType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string | number | boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fieldName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : \"\" as keyof T\n                    \n                \n                    \n                        \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oneData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        typeSort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         sortType\n\n                    \n                \n                \n                    \n                        Default value : \"ASC\"\n                    \n                \n                    \n                        \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number | boolean\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:75\n                        \n                    \n\n\n            \n                \n                        filter : filtre generique\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:84\n                        \n                    \n\n\n            \n                \n                        find : recupere l'Objet T\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n            \n                \nsort()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:36\n                        \n                    \n\n\n            \n                \n                        sort : classe par ordre croissant ou decroissant\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        valueData\n                    \n                \n\n                \n                    \n                        getvalueData()\n                    \n                \n                            \n                                \n                                    Defined in projects/sort-filter-find/src/lib/sort-filter-find.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        type sortType =\"ASC\"| \"DESC\";\nclass ModelT{\n    constructor(){}\n    [key: string]: unknown\n}\n/**\n * classe pour effectuer des operations simples sur les array : Sort / Find / Filter\n */\n\nexport class SortFilterFind {\n  private data : Array=[];\n  private oneData : T | null = null;\n  private typeSort : sortType=\"ASC\";\n  private fieldName : keyof T = \"\" as keyof T;\n  private value :  string | number | boolean =\"\";\n  \n  constructor(\n    data: Array,\n    typeSort: sortType,\n    fieldName: keyof T,\n    value: string | number | boolean =\"\"\n) {\n    this.data = data;\n    this.typeSort = typeSort;\n    this.fieldName = fieldName;\n    this.value = value;\n}\n\n  get valueData() : T | T[] | null{\n      return (this.data.length !==0)? this.data : this.oneData ; \n  }\n  /**\n   * sort : classe par ordre croissant ou decroissant\n   * @returns T[]\n   */\n  sort() : this{ \n      if(this.typeSort===\"ASC\")\n      {\n          this.data.sort((a,b)=> {\n\n              if (typeof a[this.fieldName] === 'string' && typeof b[this.fieldName] === 'string') {\n                  return (a[this.fieldName] as string).localeCompare(b[this.fieldName] as string);\n              }\n              \n              if (typeof a[this.fieldName] === 'number' && typeof b[this.fieldName] === 'number') {\n                  return  (a[this.fieldName] as number) - (b[this.fieldName] as number);\n              }\n              return 0;\n  \n          } )\n      }\n\n      if(this.typeSort===\"DESC\")\n          {\n              this.data.sort((a,b)=> {\n  \n                  if (typeof a[this.fieldName] === 'string' && typeof b[this.fieldName] === 'string') {\n                      return (b[this.fieldName] as string).localeCompare(a[this.fieldName] as string);\n                  }\n                  \n                  if (typeof a[this.fieldName] === 'number' && typeof b[this.fieldName] === 'number') {\n                      return  (b[this.fieldName] as number) - (a[this.fieldName] as number);\n                  }\n                  return 0;\n      \n              } )\n          }\n      return this;\n  }\n\n  /**\n   * filter : filtre generique\n   * @returns T[]\n   */\n  filter() : this\n  {\n      this.data = this.data.filter((element) => element[this.fieldName] === this.value);\n      return this;\n  }\n  /**\n   * find : recupere l'Objet T\n   * @returns T | null\n   */\n  find() : this{\n      this.oneData = this.data.find((element)=> element[this.fieldName] === this.value) ?? null;\n      this.data=[];\n      return this;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/sort-filter-find/src/lib/sort-filter-find.ts\n            \n            class\n            ModelT\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/sort-filter-find/src/lib/sort-filter-find.ts\n            \n            class\n            SortFilterFind\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        projects/sort-filter-find/src/lib/sort-filter-find.ts\n            \n            type alias\n            sortType\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSortFilterFind\nThis project was generated with Angular CLI version 17.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : librairie pour faciliter les operations sur tout type de tableau\n        \n            Keywords : filter, array, find, sort, ts, generique\n        \n            Homepage : https://github.com/lemu94/sortFilterFind#readme\n        \n            Bugs : https://github.com/lemu94/sortFilterFind/issues\n        \n            License : UNLICENSED\n        \n            Repository : git+https://github.com/lemu94/sortFilterFind.git\n        \n            Author : lemuel yokoi\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            sortType   (projects/.../sort-filter-find.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/sort-filter-find/src/lib/sort-filter-find.ts\n    \n    \n        \n            \n                \n                    \n                    sortType\n                \n            \n            \n                \n                        \"ASC\" | \"DESC\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
